name: build
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: 'msys2 {0}', artifact: 'elaphurelink-openocd-win32-x64' }
          - { os: ubuntu-latest,  shell: bash, artifact: 'elaphurelink-openocd-linux-x64'  }
    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    steps:
    - name: Prepare
      if: ${{ matrix.sys.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool pkg-config libcapstone-dev libhidapi-dev libftdi1-dev libusb-1.0-0-dev libuv1-dev libjaylink-dev
    - name: Setup msys2
      if: ${{ matrix.sys.os == 'windows-latest' }}
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          autotools
          base-devel
          git
          mingw-w64-ucrt-x86_64-capstone
          mingw-w64-ucrt-x86_64-hidapi
          mingw-w64-ucrt-x86_64-libftdi
          mingw-w64-ucrt-x86_64-libjaylink
          mingw-w64-ucrt-x86_64-libusb
          mingw-w64-ucrt-x86_64-libuv
          mingw-w64-ucrt-x86_64-toolchain
    - name: Git config setting
      if: ${{ matrix.sys.os == 'windows-latest' }}
      shell: cmd
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v4
    - name: Build
      run: |
        mkdir install
        git clone --recursive https://github.com/openocd-org/openocd.git && cd openocd
        git checkout cd9e64a25ac167d188859e991201d3fe492a91e1
        git apply ../patch/*.patch
        cp ../cmsis_dap_elaphurelink.c src/jtag/drivers
        cp ../elaphurelink.cfg tcl/interface
        ./bootstrap
        ./configure --prefix=$PWD/../install
        make -j12
        make install
    - name: Copy DLL
      if: ${{ matrix.sys.os == 'windows-latest' }}
      run: |
        cd $GITHUB_WORKSPACE/install/bin
        cp /ucrt64/bin/libcapstone.dll ./
        cp /ucrt64/bin/libftdi1.dll ./
        cp /ucrt64/bin/libhidapi-0.dll ./
        cp /ucrt64/bin/libjaylink-0.dll ./
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.sys.artifact }}
        path: install